-- Game Loaded Check
if not game:IsLoaded() then
	game.Loaded:Wait()
end

-- Checks if the executor is supported
assert(fireproximityprompt, "Your exploit is not supported!")

local writefile = type(writefile) == "function" and function(file, data, safe)
	if safe == true then return pcall(writefile, file, data) end
	writefile(file, data)
end

local readfile = type(readfile) == "function" and function(file, safe)
	if safe == true then return pcall(readfile, file) end
	return readfile(file)
end

function writefileExploit()
	if writefile then
		return true
	end
end

function readfileExploit()
	if readfile then
		return true
	end
end

-- Locals

local cloneref = cloneref or function(o) return o end
COREGUI = cloneref(game:GetService("CoreGui"))
Players = cloneref(game:GetService("Players"))

MarketplaceService = cloneref(game:GetService("MarketplaceService"))
PlaceId, JobId = game.PlaceId, game.JobId

UserInputService = cloneref(game:GetService("UserInputService"))

local IsOnMobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, UserInputService:GetPlatform())

local plr = Players.LocalPlayer

local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

local Character = plr.Character or plr.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local CommandsDirectory = "Deem_commands"
local ChatPrefix = "!"
local Commands = {}

--// GUI Creation \\--

local ScreenGui = Instance.new("ScreenGui")
local Output = Instance.new("Frame")
local Background = Instance.new("Frame")
local Chat = Instance.new("Frame")
local Scroll = Instance.new("ScrollingFrame")
local Input = Instance.new("TextBox")
local UIPadding = Instance.new("UIPadding")
local Shadow = Instance.new("Frame")
local Close = Instance.new("TextButton")
local ImageLabel = Instance.new("ImageLabel")
local PopupText = Instance.new("TextLabel")
local UIPadding_2 = Instance.new("UIPadding")
local Hide = Instance.new("TextButton")
local ImageLabel_2 = Instance.new("ImageLabel")

TweenService = cloneref(game:GetService("TweenService"))

ScreenGui.Parent = COREGUI

Output.Name = "Output"
Output.Parent = ScreenGui
Output.AnchorPoint = Vector2.new(0.5, 0.5)
Output.BackgroundColor3 = Color3.fromRGB(35, 35, 36)
Output.BorderColor3 = Color3.fromRGB(0, 0, 0)
Output.BorderSizePixel = 0
Output.Position = UDim2.new(0.5, 0, 0.5, 0)
Output.Size = UDim2.new(0, 338, 0, 20)
Output.ZIndex = 10
Output.Active = true

Background.Name = "Background"
Background.Parent = Output
Background.BackgroundColor3 = Color3.fromRGB(35, 35, 36)
Background.BorderColor3 = Color3.fromRGB(0, 0, 0)
Background.BorderSizePixel = 0
Background.ClipsDescendants = true
Background.Position = UDim2.new(0, 0, 1, 0)
Background.Size = UDim2.new(0, 338, 0, 245)

Chat.Name = "Chat"
Chat.Parent = Background
Chat.BackgroundColor3 = Color3.fromRGB(35, 35, 36)
Chat.BorderColor3 = Color3.fromRGB(0, 0, 0)
Chat.ClipsDescendants = true
Chat.Size = UDim2.new(0, 338, 0, 245)
Chat.ZIndex = 10

Scroll.Name = "Scroll"
Scroll.Parent = Chat
Scroll.Active = true
Scroll.BackgroundColor3 = Color3.fromRGB(45, 45, 47)
Scroll.BorderColor3 = Color3.fromRGB(0, 0, 0)
Scroll.BorderSizePixel = 0
Scroll.Position = UDim2.new(0, 5, 0, 5)
Scroll.Size = UDim2.new(0, 328, 0, 210)
Scroll.ZIndex = 10
Scroll.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
Scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
Scroll.ScrollBarThickness = 8
Scroll.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

Input.Name = "Input"
Input.Parent = Chat
Input.AnchorPoint = Vector2.new(0.5, 0)
Input.BackgroundColor3 = Color3.fromRGB(45, 45, 47)
Input.BorderColor3 = Color3.fromRGB(0, 0, 0)
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.5, 0, 0, 220)
Input.Size = UDim2.new(0, 328, 0, 20)
Input.ZIndex = 10
Input.Font = Enum.Font.SourceSans
Input.PlaceholderText = "Command Bar (;)"
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextSize = 14.000
Input.TextWrapped = true
Input.TextXAlignment = Enum.TextXAlignment.Left

UIPadding.Parent = Input
UIPadding.PaddingLeft = UDim.new(0, 1)

Shadow.Name = "Shadow"
Shadow.Parent = Output
Shadow.BackgroundColor3 = Color3.fromRGB(45, 45, 47)
Shadow.BorderColor3 = Color3.fromRGB(0, 0, 0)
Shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
Shadow.Size = UDim2.new(0, 338, 0, 20)
Shadow.ZIndex = 10
Shadow.Active = false

Close.Name = "Close"
Close.Parent = Shadow
Close.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(1, -20, 0, 0)
Close.Size = UDim2.new(0, 20, 0, 20)
Close.ZIndex = 10
Close.Font = Enum.Font.SourceSans
Close.Text = ""
Close.TextColor3 = Color3.fromRGB(0, 0, 0)
Close.TextSize = 14.000
Close.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)

ImageLabel.Parent = Close
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 10, 0, 10)
ImageLabel.ZIndex = 10
ImageLabel.Image = "rbxassetid://5054663650"

PopupText.Name = "PopupText"
PopupText.Parent = Shadow
PopupText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PopupText.BackgroundTransparency = 1.000
PopupText.BorderColor3 = Color3.fromRGB(0, 0, 0)
PopupText.BorderSizePixel = 0
PopupText.Size = UDim2.new(1, 0, 0.949999988, 0)
PopupText.ZIndex = 11
PopupText.Font = Enum.Font.SourceSansBold
PopupText.Text = "Deem Admin"
PopupText.TextColor3 = Color3.fromRGB(255, 255, 255)
PopupText.TextSize = 14.000
PopupText.TextXAlignment = Enum.TextXAlignment.Left

UIPadding_2.Parent = PopupText
UIPadding_2.PaddingLeft = UDim.new(0, 2)

Hide.Name = "Hide"
Hide.Parent = Shadow
Hide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hide.BackgroundTransparency = 1.000
Hide.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hide.BorderSizePixel = 0
Hide.Position = UDim2.new(1, -40, 0, 0)
Hide.Size = UDim2.new(0, 20, 0, 20)
Hide.ZIndex = 10
Hide.Font = Enum.Font.SourceSans
Hide.Text = ""
Hide.TextColor3 = Color3.fromRGB(0, 0, 0)
Hide.TextSize = 14.000
Hide.MouseButton1Click:Connect(function()
	if Background.Size ~= UDim2.new(1,0,0,0) then
		Background:TweenSize(UDim2.new(1,0,0,0), "InOut", "Quart", 0.3, true, nil)
	else
		Background:TweenSize(UDim2.new(0, 338, 0, 245), "InOut", "Quart", 0.3, true, nil)
	end
end)

ImageLabel_2.Parent = Hide
ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_2.Size = UDim2.new(0, 14, 0, 14)
ImageLabel_2.ZIndex = 10
ImageLabel_2.Image = "rbxassetid://2406617031"

--// Drag Function \\--

function dragGUI(gui)
	task.spawn(function()
		local dragging
		local dragInput
		local dragStart = Vector3.new(0,0,0)
		local startPos
		local function update(input)
			local delta = input.Position - dragStart
			local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			TweenService:Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
		end
		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end)
end

dragGUI(Output)

--// Functions \\--

CleanFileName = function(name)
	return tostring(name):gsub("[*\\?:<>|]+", ""):sub(1, 175)
end

local cooldown = false
function writefileCooldown(name,data)
	task.spawn(function()
		if not cooldown then
			cooldown = true
			writefile(name, data, true)
		else
			repeat wait() until cooldown == false
			writefileCooldown(name,data)
		end
		wait(3)
		cooldown = false
	end)
end

function Time()
	local HOUR = math.floor((tick() % 86400) / 3600)
	local MINUTE = math.floor((tick() % 3600) / 60)
	local SECOND = math.floor(tick() % 60)
	local AP = HOUR > 11 and 'PM' or 'AM'
	HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
	HOUR = HOUR < 10 and '0' .. HOUR or HOUR
	MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
	SECOND = SECOND < 10 and '0' .. SECOND or SECOND
	return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
end

local lastMessage = nil
local lastLabel = nil
local dupeCount = 1

function CreateLabel(Output)
	if lastMessage == Output then
		dupeCount = dupeCount+1
		lastLabel.Text = Time()..' - '..Output..' (x'..dupeCount..')'
	else
		if dupeCount > 1 then dupeCount = 1 end
		if #Scroll:GetChildren() >= 2546 then
			Scroll:ClearAllChildren()
		end
		local alls = 0
		for i,v in pairs(Scroll:GetChildren()) do
			if v then
				alls = v.Size.Y.Offset + alls
			end
			if not v then
				alls = 0
			end
		end
		local tl = Instance.new('TextLabel')
		lastMessage = Output
		lastLabel = tl
		tl.Name = Output
		tl.Parent = Scroll
		tl.ZIndex = 10
		tl.Text = Time().." - "..Output
		tl.Size = UDim2.new(0,322,0,84)
		tl.BackgroundTransparency = 1
		tl.BorderSizePixel = 0
		tl.Font = "SourceSans"
		tl.Position = UDim2.new(-1,0,0,alls)
		tl.TextTransparency = 1
		tl.TextScaled = false
		tl.TextSize = 14
		tl.TextWrapped = true
		tl.TextXAlignment = "Left"
		tl.TextYAlignment = "Top"
		tl.TextColor3 = Color3.fromRGB(255,255,255)
		tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
		Scroll.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
		Scroll.CanvasPosition = Vector2.new(0,Scroll.CanvasPosition.Y+tl.TextBounds.Y)
		tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
		TweenService:Create(tl, TweenInfo.new(1.25, Enum.EasingStyle.Linear), { TextTransparency = 0 }):Play()
	end
end

local function getroot(char)
	return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
end

-- Message

local function sendChatFeedback(message)
	StarterGui:SetCore("ChatMakeSystemMessage", {
		Text = "[Situation Admin]: " .. message,
		Color = Color3.new(1, 1, 1),
		Font = Enum.Font.SourceSansBold,
		FontSize = Enum.FontSize.Size18,
	})
end

local function sendOutputFeedback(message)
	CreateLabel("[Deem Admin]: " .. message)
end

sendChatFeedback("Welcome to Deem Admin (Beta)!\nType '!help' for a list of commands.")

sendOutputFeedback("Welcome to Deem Admin (Beta)!\nType 'help' for a list of commands.")

local function split(str, sep)
	if str == nil then
		return {}
	end
	if #sep > 1 then
		return {}
	end
	local tokens = {}
	for v in str:gmatch("([^" .. sep .. "]+)") do
		table.insert(tokens, v)
	end
	return tokens
end

local function loadCommands()
	if not isfolder(CommandsDirectory) then
		makefolder(CommandsDirectory)
	end

	for _, filePath in ipairs(listfiles(CommandsDirectory)) do
		if filePath:match("%.lua$") or filePath:match("%.txt$") then
			local commandName = filePath:match("([^/\\]+)%.%w+$")
			local commandFunction = loadstring(readfile(filePath))

			if commandFunction then
				Commands[commandName] = commandFunction
			end
		end
	end
end

Commands.help = function()
	local helpMessage = "Available Commands:"
	local i = 1
	
	CreateLabel(helpMessage)

	for commandName in pairs(Commands) do
		CreateLabel(i .. ") " .. commandName)
		i += 1
	end

	sendOutputFeedback(helpMessage)
end

Commands.getremote = function(...)
	for i, v in pairs(game:GetDescendants()) do
		if string.match(v.ClassName, "RemoteEvent") then
			sendOutputFeedback("\nRemoteEvent found!  \nLocation: " .. v:GetFullName() .. "  \nMethod  FireServer\n")
		elseif string.match(v.ClassName, "RemoteFunction") then
			sendOutputFeedback("\nRemoteFunction found! \nLocation: " .. v:GetFullName() .. "  \nMethod | InvokeServer\n")
		else

		end
	end
end

Commands.getremoteevents = function(...)
	for i, v in pairs(game:GetDescendants()) do
		if string.match(v.ClassName, "RemoteEvent") then
			sendOutputFeedback("\nRemoteEvent found!  \nLocation: " .. v:GetFullName() .. "  \nMethod  FireServer\n")
		else

		end
	end
end

Commands.getremotefunctions = function(...)
	for i, v in pairs(game:GetDescendants()) do
		if string.match(v.ClassName, "RemoteFunction") then
			sendOutputFeedback("\nRemoteFunction found! \nLocation: " .. v:GetFullName() .. "  \nMethod | InvokeServer\n")
		else

		end
	end
end

Commands.noclip = function(...)
	for i, v in pairs(plr.Character:GetChildren()) do
		if v:IsA("BasePart") then
			v.CanCollide = false
		end
	end
end

Commands.clip = function(...)
	for i, v in pairs(plr.Character:GetChildren()) do
		if v:IsA("BasePart") then
			v.CanCollide = true
		end
	end
end

Commands.fireclickdetectors = function(...)
	for i, v in pairs(workspace:GetDescendants()) do
		if v:IsA("ClickDetector") then
			fireclickdetector(v)
		end
	end
end

Commands.supportserver = function(...)
	sendOutputFeedback("discord.gg/su7ycRRJyz\n Server link has been copied to your clipboard.\n")
	setclipboard("discord.gg/su7ycRRJyz")
end

Commands.noproximitycooldown = function(...)
	while task.wait() do
		game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(fireproximityprompt)
	end
end

Commands.spoofmemory = function(...)
	hookfunction((gcinfo or collectgarbage), function(...)
		return math.random(200, 350)
	end)

	local gamemt = getrawmetatable(game)

	setreadonly(gamemt, false)

	local nc = gamemt.__namecall

	gamemt.__namecall = newcclosure(function(...)
		if getnamecallmethod() == "GetTotalMemoryUsageMb" then
			return math.random(395, 405)
		end

		return nc(...)
	end)

	hookfunction(game.Stats.GetTotalMemoryUsageMb, function()
		return math.random(395, 405)
	end)

	sendOutputFeedback("Memory Spoofed!\n")
end

Commands.teleport = function(...)
	for i, plr in ipairs(Players:GetPlayers()) do
		sendOutputFeedback(i .. ".) " .. plr.Name .. "\n")
	end

	sendOutputFeedback("Choice: ")

	local playerNum = tonumber(sendOutputFeedback())
	local players = Players:GetPlayers()

	if playerNum ~= nil and playerNum > 0 and playerNum <= #players then
		local plrchar = players[playerNum].Character

		getroot(Character).CFrame = getroot(plrchar).CFrame
	else
		sendOutputFeedback("Player chosen is invalid!\n")
	end
end

Commands.antiafk = function(...)
	for i, v in pairs(getconnections(Players.LocalPlayer.Idled)) do
		v:Disable()
	end
end

Commands.fullbright = function(...)
	Lighting.Brightness = 2
	Lighting.ClockTime = 14
	Lighting.FogEnd = 100000
	Lighting.GlobalShadows = false
	Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
end

Commands.noproximitycooldown = function(...)
	while task.wait() do
		game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(fireproximityprompt)
	end
end

Commands.clear = function(...)
	for _, child in pairs(Scroll:GetChildren()) do
		child:Destroy()
	end
	Scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
end

Commands.saveoutput = function(...)
	if writefileExploit() then
		if #Scroll:GetChildren() > 0 then
			CreateLabel("Loading",'Hold on a sec')
			local placeName = CleanFileName(MarketplaceService:GetProductInfo(PlaceId).Name)
			local writelogs = '-- Deem Admin Output logs for "'..placeName..'"\n'
			for _, child in pairs(Scroll:GetChildren()) do
				writelogs = writelogs..'\n'..child.Text
			end
			local writelogsFile = tostring(writelogs)
			local fileext = 0
			local function nameFile()
				local file
				pcall(function() file = readfile(placeName..' Output Logs ('..fileext..').txt') end)
				if file then
					fileext = fileext+1
					nameFile()
				else
					writefileCooldown(placeName..' Output Logs ('..fileext..').txt', writelogsFile)
				end
			end
			nameFile()
			CreateLabel('Output Logs','Saved Output logs to the workspace folder within your exploit folder.')
		end
	else
		CreateLabel('Output Logs','Your exploit does not support write file. You cannot save chat logs.')
	end
end

-- Chat Command Runner
local function processChatMessage(message)
	if message:sub(1, #ChatPrefix) == ChatPrefix then
		local args = split(message:sub(#ChatPrefix + 1), " ")
		local commandName = table.remove(args, 1):lower()

		if Commands[commandName] then
			local success, err = pcall(function()
				Commands[commandName](table.unpack(args))
			end)

			if success then
				sendChatFeedback("Executed '" .. commandName .. "' successfully!")
			else
				sendChatFeedback("Error executing '" .. commandName .. "': " .. tostring(err))
			end
		else
			sendChatFeedback("Unknown command: " .. commandName)
		end
	end
end

-- Input Command Runner
local function processInputCommand(cmd)
	local args = split(cmd, " ")
	local commandName = string.lower(args[1])
	table.remove(args, 1)
	
	if Commands[commandName] then
		local success, err = pcall(function()
			Commands[commandName](table.unpack(args))
		end)
		
		if success then
			sendOutputFeedback("Executed '" .. commandName .. "' successfully!")
		else
			sendOutputFeedback("Error executing '" .. commandName .. "': " .. tostring(err))
		end
	else
		sendOutputFeedback("Unknown command: " .. commandName)
	end
end

-- Focus command bar
plr:GetMouse().KeyDown:Connect(function(key)
	if key == ";" then
		Input:CaptureFocus()
		spawn(function()
			Input.Text = ""
		end)
	end
end)

Input.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		processInputCommand(Input.Text)
		Input:ReleaseFocus()
	end
end)

plr.Chatted:Connect(processChatMessage)
RunService.Heartbeat:Connect(loadCommands)
